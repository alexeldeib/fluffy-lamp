apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name postgresql
  labels:
    app: *name
spec:
  replicas: 1
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      # nodeSelector:
      #   agentpool: agentpool1
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #     - labelSelector:
      #         matchExpressions:
      #         - key: app
      #           operator: In
      #           values:
      #           - pgbench
      #       topologyKey: kubernetes.io/hostname
      containers:
      - image: docker.io/alexeldeib/postgresql:latest
        imagePullPolicy: IfNotPresent
        # command: ["sleep", "infinity"]
        name: postgresql
        env:
        - name: "DATA_DIR"
          value: "" # adjust for testing pvc, nvme, temp disk (ephemeral should be same as temp)
        - name: DB_USER 
          valueFrom:
            secretKeyRef:
              name: pg-config
              key: PGUSER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-config
              key: PGPASSWORD
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: pg-config
              key: PGDATABASE
        ports:
          - containerPort: 5432
        livenessProbe:
          exec:
            command:
            - bash
            - /livez.sh
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
            - bash
            - /livez.sh
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      terminationGracePeriodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: &name postgresql
  labels:
    app: *name
spec:
  ports:
  - port: 5432
    protocol: TCP
  selector:
    app: *name
---